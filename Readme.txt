1. 拿到一个项目之后，先看下各自的功能，然后再看下各自的各个模块，最后再看下点击之后每个页面，哪里是变化的，而哪里是不变的
   就拿这个项目来说，当点击各个模块，例如首页，会员，购物车，搜索之后，发现每个页面的头部和底部是不变的，唯一有变化的就是
   他的中间部分，而且中间部分是随着点击底部的选项卡变化的，那么则说明这个项目暂时可以分为三个部分组成，头部的Header，中间
   部分由于是随着底部的变化而变化的，而且从地址栏来看，每点击一个选项卡，他的地址栏都会像路由那样变化，点击底部四个按钮，
   中间应该切换不同的组件，所以中间部分是由路由组成的，底部的 Tabbar 导航栏也是固定的

2. 做项目的时候，要看下对应的模块，有没有现成的，再看看别人有没有，最后都没有，只能自己写，如果有的话，就直接拿过来用就好
   然后发现我们这个项目是有这个头部的，在 Mint-UI 里面,底部的 Tabbar 是在 MUI 里面的

3. 拿过来用之后，要把对应的修改为自己的，而且看demo可以看出来，点击底部四个按钮，地址栏会随着变化，而且中间部分也会随着
   切换到对应的组件去，所以我们应该给底部四个按钮添加路由链接，所以要启用路由，启用路由之前，要先配置路由：
   3.1 导入路由的包
    import VueRouter from 'vue-router'
   3.2 安装路由模块
    Vue.use(VueRouter)
   3.3 导入自己的 router.js 路由模块(router.js 写自己的路由对象)
    import router from './router.js'
   3.4 挂载路由对象到 VM 实例上
    router:routerObj

4. 底部四个按钮都是 a 链接，要把他们改成 router-link,然后把相应的 href 改成 to, 把 # 改成 /

5. 底部四个按钮，本来是默认第一个高亮，但是我们的 demo 是要我们每次选中的那个高亮，而不是就第一个高亮，所以我们要找到
   原本为啥会高亮的的原因是 mui-active，而且我们把a改成router-link之后，每次点击选中的那个就会出现一个隐藏的
   类为：router-link-active
   第一种办法就是把 mui-active 这个删掉，然后给 router-link-active 这个类设置一个样式。
   第二种办法就是把 router-link-active 直接改成 mui-active 去路由对象 router.js 里面的配置属性修改

6. 点击 tabbar 中的路由链接，展示对应的路由组件
   6.1 新建文件夹存放这四个路由组件，然后再在这个文件夹里面新建四个路由组件，也就是 .vue 文件
   6.2 在 router.js 路由对象文件中，导入这四个路由组件，然后在路由对象里面，配置这四个路由规则
   6.3 在配置路由规则的时候，path 里面的路径的一定要跟 to 里面的路径一致，不然会找不到路由
   6.4 在要显示的页面(App.vue)，给他一个容器<router-view>,才会显示出来，不然显示不了

7. 首页轮播图布局 也去 Mint-UI 里面找，找到之后直接应用就好,应用完之后会发现，在项目中不显示，但是查看元素发现，元素还在，
   那么这时候你就要给父元素设置一个宽度了，这样才能显示的出来

8. 加载首页轮播图数据(由于这边没有服务器，只能用假数据，但是步骤还是要的)
   8.1 通过 vue-resource 来获取数据，通过 cnpm i vue-resource -S 来安装 vue-resource
   8.2 在 main.js 中导入，安装 vue-resource
   8.3 安装，导入之后，我们就可以在每一个组件里面通过 this.$http 来发送数据请求
   8.4 轮播图是要再页面一进去之后就要发送请求了，所以要再 created() 方法内就得发送请求了
   8.5 发送数据请求是业务逻辑，所以应该要再 script 里面进行操作 export default {data:(){return{}},methods:{}}
